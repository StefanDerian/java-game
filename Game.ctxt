#BlueJ class context
comment0.target=Game
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Constructor\ which\ initialize\ dice\ only\r\n
comment10.params=
comment10.target=int\ getPenalthy()
comment10.text=\r\n\ Constructor\ which\ initialize\ dice,\ both\ players\ and\ penalthy\r\n
comment11.params=
comment11.target=void\ displayMenu()
comment11.text=\r\n\ a\ method\ for\ displaying\ menu\ throughout\ the\ game\ \r\n\ and\ asking\ user\ output\ in\ the\ form\ of\ number\r\n
comment12.params=
comment12.target=void\ exitGame()
comment12.text=\r\n\ exit\ the\ game\ by\ making\ player\ 1\ and\ player\ 2's\ name\ become\ "".\r\n
comment13.params=
comment13.target=void\ gameHelp()
comment13.text=\r\n\r\n\ showing\ game\ help\r\n\r\n
comment14.params=
comment14.target=void\ finishGame()
comment14.text=\r\n\r\n\ finish\ the\ game\ if\ one\ or\ two\ player(s)\ has\ reached\ 50\r\n\r\n
comment15.params=
comment15.target=void\ playOneRound()
comment15.text=\r\n\r\n\ Playing\ one\ round\ if\ game\ state\ is\ 1,\ otherwise\ error\ displayed\r\n\r\n
comment16.params=
comment16.target=void\ displayPosition()
comment16.text=\r\n\ Displaying\ player\ position\ if\ game\ state\ is\ 1,\ otherwise\ error\ displayed\r\n\r\n
comment17.params=
comment17.target=void\ restartStartGame()
comment17.text=\r\n\ method\ for\ starting\ or\ restarting\ game\r\n\ check\ the\ state\ of\ the\ game\r\n\ if\ the\ game\ is\ running,\ the\ game\ will\ restart\r\n\ if\ the\ game\ is\ not\ running,\ the\ game\ will\ ask\ for\ player's\ name\ before\ starting\r\n\r\n
comment18.params=error
comment18.target=void\ displayError(java.lang.String)
comment18.text=\r\n\ method\ for\ displaying\ error\ message\r\n\ @params\:\ error,\ an\ error\ message\ to\ be\ displayed\r\n\r\n
comment19.params=player
comment19.target=void\ movePlayer(Player)
comment19.text=\r\n\ method\ for\ handling\ the\ character\ movement\r\n\ @params\:\ player,\ a\ player\ object\ which\ will\ be\ altered\ in\ term\ of\ position\r\n\r\n
comment2.params=penalthy
comment2.target=Game(int)
comment2.text=\r\n\ Constructor\ which\ initialize\ dice\ and\ penalthy\ value\r\n
comment20.params=
comment20.target=boolean\ checkState()
comment20.text=\r\n\ method\ for\ checking\ the\ state\ of\ the\ game\ by\ detecting\ the\ presence\ of\ the\ player\r\n\ @return\:\ a\ boolean\ value\ which\ indicate\ the\ presence\ of\ 2\ players\r\n
comment3.params=player1\ player2
comment3.target=Game(java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Constructor\ which\ initialize\ both\ players\ and\ dice\r\n
comment4.params=player1\ player2\ penalthy
comment4.target=Game(java.lang.String,\ java.lang.String,\ int)
comment4.text=\r\n\ Constructor\ which\ initialize\ dice,\ both\ players\ and\ penalthy\r\n
comment5.params=player1
comment5.target=void\ setPlayer1(java.lang.String)
comment5.text=\r\n\ method\ to\ set\ player\ 1\ object\r\n\ @params\ player1\ name\ \r\n
comment6.params=player2
comment6.target=void\ setPlayer2(java.lang.String)
comment6.text=\r\n\ method\ to\ set\ player\ 2\ object\r\n\ @params\ player2\ name\ \r\n
comment7.params=
comment7.target=Player\ getPlayer1()
comment7.text=\r\n\ method\ to\ get\ player\ 1\ object\r\n\ @return\ player1\ object\r\n
comment8.params=
comment8.target=Player\ getPlayer2()
comment8.text=\r\n\ method\ to\ get\ player\ 2\ object\r\n\ @return\ player2\ object\r\n
comment9.params=penalthy
comment9.target=void\ setPenalthy(int)
comment9.text=\r\n\ Constructor\ which\ initialize\ dice,\ both\ players\ and\ penalthy\r\n
numComments=21
